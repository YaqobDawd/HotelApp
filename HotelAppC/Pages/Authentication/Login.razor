@page "/login"
@using System.Web;
@inject IAuthenticationService AuthenticationService
<EditForm Model="user" OnValidSubmit="UserLogin" class="pt-4 ">
   <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="py-2 ">
            <div class=" row form-group ">
                <div class="col-6 offset-3">
                <div class="card border bg-dark">
                        <div class="card-body px-lg-5 pt-2">
                            <h3 class="col-12 text-success text-center py-2">
                                <strong>Sign In</strong>
                            @if (ShowError)
                            {
                                <p class="text-danger">@Error</p>
                            }
                            </h3>
                            <hr style="background-color:aliceblue" />
                            <div class="py-2 input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text bg-success icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-envelope-at-fill m-1" viewBox="0 0 16 16">
                                        <path d="M2 2A2 2 0 0 0 .05 3.555L8 8.414l7.95-4.859A2 2 0 0 0 14 2H2Zm-2 9.8V4.698l5.803 3.546L0 11.801Zm6.761-2.97-6.57 4.026A2 2 0 0 0 2 14h6.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.606-3.446l-.367-.225L8 9.586l-1.239-.757ZM16 9.671V4.697l-5.803 3.546.338.208A4.482 4.482 0 0 1 12.5 8c1.414 0 2.675.652 3.5 1.671Z" />
                                        <path d="M15.834 12.244c0 1.168-.577 2.025-1.587 2.025-.503 0-1.002-.228-1.12-.648h-.043c-.118.416-.543.643-1.015.643-.77 0-1.259-.542-1.259-1.434v-.529c0-.844.481-1.4 1.26-1.4.585 0 .87.333.953.63h.03v-.568h.905v2.19c0 .272.18.42.411.42.315 0 .639-.415.639-1.39v-.118c0-1.277-.95-2.326-2.484-2.326h-.04c-1.582 0-2.64 1.067-2.64 2.724v.157c0 1.867 1.237 2.654 2.57 2.654h.045c.507 0 .935-.07 1.18-.18v.731c-.219.1-.643.175-1.237.175h-.044C10.438 16 9 14.82 9 12.646v-.214C9 10.36 10.421 9 12.485 9h.035c2.12 0 3.314 1.43 3.314 3.034v.21Zm-4.04.21v.227c0 .586.227.8.581.8.31 0 .564-.17.564-.743v-.367c0-.516-.275-.708-.572-.708-.346 0-.573.245-.573.791Z" />
                                    </svg>

                                </span>
                                </div>
                                <InputText @bind-Value="user.Name" class="form-control" placeholder="Email..." />
                            </div>
                        <ValidationMessage For="(()=>user.Name)" />

                            <div class="input-group py-2">
                                <div class="input-group-prepend">
                                <span class="input-group-text bg-success icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-key m-1" viewBox="0 0 16 16">
                                        <path d="M3.5 11.5a3.5 3.5 0 1 1 3.163-5H14L15.5 8 14 9.5l-1-1-1 1-1-1-1 1-1-1-1 1H6.663a3.5 3.5 0 0 1-3.163 2zM2.5 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
                                    </svg>
                                </span>
                                </div>
                                <InputText @bind-Value="user.Password" type="password" class="form-control" placeholder="Password..." />
                                
                            </div>
                        <ValidationMessage For="(()=> user.Password)" />
                            <div class="py-2 text-center">
                                <button type="submit" class="btn btn-success btn-block"><i class="fas fa-sign-in-alt"></i> Login</button>
                            </div>
                            <hr style="background-color:aliceblue" />

                            <div class="row">
                                <div class="col-6">
                                <NavLink class="nav-link text-success" href="register">
                                    <span class="p-2">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-plus-fill" viewBox="0 0 16 16">
                                            <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                                            <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z" />
                                        </svg> Register as a new user
                                    </span>
                                </NavLink>
                                </div>

                                <div class="col-6">
                                    <NavLink class="nav-link text-success float-end" href="Authentication/forgotpassword">
                                        <span >
                                            Forgot Password
                                        </span>
                                    </NavLink>
                                </div>
                            </div>





                           
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>



@code{
    private UserForLoginDTO user = new UserForLoginDTO();
    public bool ShowError{ get; set; }
    public string? Error{ get; set;  }
    public string? RetrunUrl{ get; set;  } 


    public async Task UserLogin()
    {
        ShowError = false;
        var result = await AuthenticationService.Login(user);
        if (result.IsAuthSuccess)
        {
            var AbsoluteUri = new Uri(Navigation.Uri);
            var queryParam = HttpUtility.ParseQueryString(AbsoluteUri.Query);
            RetrunUrl = queryParam["returnUrl"];
            if (string.IsNullOrEmpty(RetrunUrl))
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                Navigation.NavigateTo("/" + RetrunUrl);
            }
        }
        else
        {
            ShowError = true;
            Error = result.ErrorMessage;
        }
    }
}