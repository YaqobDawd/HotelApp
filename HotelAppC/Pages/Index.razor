@page "/"
@inject IHotelAmenityService HotelAmenityService



<div class="mt-0">
    <EditForm Model="HomeModel">
                <div class="row mx-0 mb-0">
            <div class="col-12 col-md-5  offset-md-1 pl-2  pr-2 pr-md-0">
                <div class="form-group">
                    <label class="ml-1 mb-0"><strong>Check In Date</strong></label>
                    <InputDate min="@DateTime.Now.ToString("yyyy-MM-dd")" @bind-Value="HomeModel.StartDate" class="form-control" />
                </div>
            </div>

            <div class="col-8 col-md-3 pl-2 pr-2">
                <div class="form-group">
                    <label class="ml-1 mb-0"><strong>No. Of Nights</strong></label>
                    <select @bind="@HomeModel.NoOfNight" class="form-control font-weight-bolder">
                        @for (var i = 1; i <= 10; i++)
                        {
                            <option class="font-weight-bolder" value="@i">@i</option>
                        }
                    </select>
                </div>
            </div>

            <div class="col-4 col-md-2  pr-2" style="padding:1.5em;">
                <div class="form-group">
                    <label>&nbsp; &nbsp;</label>
                    <input style="font-family:'Franklin Gothic'; font-size:15px;" @onclick="SaveInitialData" type="submit" value="Search" class="btn btn-outline-success btn-block font-weight-bolder" />
                </div>
            </div>

        </div>
    </EditForm>
    </div>

    <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block w-100" src="Images/1.jpg" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="Images/2.jpg" alt="Second slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="Images/3.jpg" alt="Third slide">
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only"></span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only"></span>
        </a>
    </div>
   
        

    <div class="container pb-4 pt-3 bg-dark">
        <div class="row login">
            <div class="col-md-8 offset-md-2 text-center ">
                <h2 class="text-warning header">Explore our Amenities</h2>
                <p style="text-align:center;" class="lead amenity-desc">Our residents enjoy our sparkling swimming pool and spa, fitness center, and community playground. Each Room is equipped with an in-home washer and dryer set, private patio or balcony, and plenty of storage space.</p>
            </div>
        </div>
        <div class="row">
            @foreach (var amenity in HotelAmenities)
            {
                <div class="col-xs-12 col-sm-6 col-md-4 ">
                    <div class="card-body text-center mt-4" style="height:230px;border:1px solid #d5d5d5; border-radius: 20px;">
                        <div class="mb-2">
                            <i class="@amenity.AmenityIcon fa-4x"></i>
                        </div>
                        <div class="text-center justify-content-center">
                            <h5 class="text-warning amenity-name">@amenity.AmenityName</h5>
                            <p class="amenity-desc" style="font-size:17px">@amenity.AmenityDescription</p>
                        </div>

                    </div>
                </div>}
        </div>

    </div>
    





@code{
    public HomeVM HomeModel { get; set; } = new HomeVM();
    public IEnumerable<HotelAmenityDTO> HotelAmenities { get; set; } = new List<HotelAmenityDTO>();

    protected async override Task OnInitializedAsync()
    {
        HotelAmenities = await HotelAmenityService.GetHotelAmenity();
    }
    protected async override Task OnAfterRenderAsync(bool firstrender)
    {
        if (firstrender)
        {
            await java.InvokeVoidAsync("startCarousels");
            firstrender = false;
        }
        
           
            
    }
    private async Task SaveInitialData()
    {
        try
        {
            HomeModel.EndDate = HomeModel.StartDate.AddDays(HomeModel.NoOfNight);
            await LocalStorage.SetItemAsync(SD.InitialRoomBookingInfo, HomeModel);
            Navigation.NavigateTo("hotel-room", true);
        }
        catch (Exception ex)
        {
            await java.ToastrError(ex.Message);   
        }
        

    }
}